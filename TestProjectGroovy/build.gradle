buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url = uri('https://www.jitpack.io')
        }
    }
    dependencies {
        classpath(files(new File('../build/libs').listFiles()))
    }
}
plugins {
    id 'java'
}
group 'plumy.test'
version '0.1'

apply plugin: io.github.liplum.mindustry.MindustryPlugin

repositories {
    use(io.github.liplum.mindustry.BuildScript) {
        mindustryRepo()
    }
    mavenCentral()
}
sourceSets {
    main {
        java.srcDirs('src')
        resources.srcDir('resources')
    }
    test {
        java.srcDir('test')
        resources.srcDir('resources')
    }
}
mindustry {
    dependency {
        mindustryMirror version: 'd7312445a1'
        arc version: '123fbf12b9'
    }
    client {
        be version: '22714'
    }
    server {
        be version: '22714'
    }
    mods {
        worksWith {
            github 'liplum/cyberio'
        }
    }
    run {
        dataDir = 'temp'
    }
    meta << ModMeta(
        name: 'mgpp-groovy',
        displayName: 'Test Plumy Mindustry Gradle Plugin Groovy',
    )
    meta.version = 'groovy 3000'
    meta.minGameVersion = '136'
    deploy {
        baseName =  'TestGroovyMod'
        version = '3.14159'
        // fatJar is default option unless you use another tool like shadowJar
        fatJar
    }
}
mindustryAssets {
    rootAt "$rootDir/assets"
    // There is no need to create a batch, if you use `rootAt 'foo/bar'`.
    /*sprites {
        dir = new File(rootDir, "assets/sprites")
        genClass // noGenClass is default
    }*/
}
antiAlias {
    sourceDirectory = new File(rootDir, 'assets/sprites')
    destinationDirectory = new File(rootDir, 'AA')
    addFilter {
        it.name != 'sender.png'
    }
    //incremental is default
    //options.isIncremental = false
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    use(io.github.liplum.mindustry.BuildScript) {
        importMindustry()
    }
}

test {
    useJUnitPlatform()
}